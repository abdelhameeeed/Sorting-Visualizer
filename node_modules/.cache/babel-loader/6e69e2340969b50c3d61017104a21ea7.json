{"ast":null,"code":"import React from 'react';\nimport './SortingVisualizer.css';\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 100; i++) {\n      array.push(Random_numbers(5, 1000));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n}\n\nfunction Random_numbers(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n_c = Random_numbers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random_numbers\");","map":{"version":3,"sources":["/media/ahmed/01D66E59AEAFF480/sortingvisualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","Random_numbers","setState","min","max","Math","floor","random"],"mappings":"AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAO,yBAAP;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAA+C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACH;;AACDA,EAAAA,UAAU,GAAE;AACR,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAG,GAApB,EAA0BA,CAAC,EAA3B,EAAgC;AAC5BH,MAAAA,KAAK,CAACI,IAAN,CAAWC,cAAc,CAAC,CAAD,EAAK,IAAL,CAAzB;AACH;;AACD,SAAKC,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACH;;AAhByD;;AAkB9D,SAASK,cAAT,CAAwBE,GAAxB,EAA8BC,GAA9B,EAAmC;AAC/B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAmCA,GAA9C,CAAP;AACH;;KAFQF,c","sourcesContent":["import React from  'react' ;\nimport './SortingVisualizer.css';\n\nexport default class SortingVisualizer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            array:[] ,\n        };\n    }\n    componentDidMount(){\n        this.resetArray();\n    }\n    resetArray(){\n        const array = [] ;\n        for(let i = 0 ; i < 100 ; i ++ ){\n            array.push(Random_numbers(5 , 1000 ) ) ;\n        }\n        this.setState({array});\n    }\n}\nfunction Random_numbers(min , max ){\n    return Math.floor(Math.random() * (max - min + 1 ) + min ) ;\n}"]},"metadata":{},"sourceType":"module"}